{% extends 'base.html.twig' %}

{% block title %}Chat avec {{ receiver.getFullName() }}{% endblock %}

{% block body %}
    <div class="container my-4">
        <h2>Discussion avec {{ receiver.getFullName() }}</h2>

        <div id="chat-messages" class="border rounded p-3 mb-4" style="height: 300px; overflow-y: scroll; background-color: #f9f9f9;">
            {% for message in messages %}
                <div class="mb-2 {% if message.sender.id == app.user.id %}text-end{% endif %}">
                    <small class="text-muted">
                        {{ message.sender.getFullName() }} - {{ message.createdAt|date('H:i:s') }}
                    </small><br>
                    <span class="d-inline-block px-3 py-2 rounded 
                        {% if message.sender.id == app.user.id %}
                            bg-primary text-white
                        {% else %}
                            bg-light text-dark
                        {% endif %}
                    ">
                        {{ message.content }}
                    </span>
                </div>
            {% endfor %}
        </div>

        <div>
            {{ form_start(form) }}
                <div class="mb-3">
                    {{ form_widget(form.content, {'attr': {'class': 'form-control', 'placeholder': 'Écrivez votre message...'}}) }}
                </div>
                <button class="btn btn-success">Envoyer</button>
            {{ form_end(form) }}
        </div>
    </div>

    <script>
        // Ne pas exécuter le polling si on est en mode local
        if (window.location.protocol !== 'file:') {
            setInterval(() => {
                fetch("{{ path('chat_index', {'receiverId': receiver.id}) }}", {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) throw new Error('Erreur réseau');
                    return response.text();
                })
                .then(html => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');
                    const newMessages = doc.getElementById('chat-messages');
                    if (newMessages) {
                        document.getElementById('chat-messages').innerHTML = newMessages.innerHTML;
                    }
                })
                .catch(error => {
                    console.error('Erreur lors du polling :', error);
                });
            }, 5000);
        } else {
            document.addEventListener('DOMContentLoaded', () => {
                const chatBox = document.getElementById('chat-messages');
                if (chatBox) {
                    chatBox.innerHTML += `
                        <div class="mt-3 p-3 bg-warning text-dark rounded">
                            <strong>Note :</strong> Le rafraîchissement automatique est désactivé en mode local.
                            Veuillez utiliser un serveur HTTP pour voir les nouveaux messages automatiquement.
                        </div>`;
                }
            });
        }
    </script>
{% endblock %}
